name: CI

on: 
  push:
    branches:
      - 'main'
      - 'master'
      - 'github-actions-update-dependencies'
    

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      - name: Prepare Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-pc-windows-msvc
      - uses: Swatinem/rust-cache@v1
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - run: mkdir staging
      - name: Stage
        working-directory: staging
        run: |
          mkdir -p ./red4ext/plugins
          mkdir -p ./r6/scripts
          mkdir -p ./r6/tweaks
          cp -R ../reds/* ./r6/scripts
          cp -R ../tweaks/* ./r6/tweaks
          cp ../target/release/*.dll ./red4ext/plugins/
      - name: Compress zip
        uses: thedoctor0/zip-release@0.7.1
        with:
          filename: CP77-External-Radio-red4ext.zip
          path: staging/**/*
          type: zip
      - uses: actions/upload-artifact@v3
        with:
          name: CP77-External-Radio-red4ext.zip
          path: CP77-External-Radio-red4ext.zip
  draft-release:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: CP77-External-Radio-red4ext.zip
      - name: Read cargo.toml
        uses: juliangruber/read-file-action@v1
        id: cargo_toml
        with: 
          path: ./cargo.toml
      - name: Find package version
        uses: actions-ecosystem/action-regex-match@v2
        id: version_regex
        with:
          text: ${{ steps.cargo_toml.outputs.content }}
          regex: '\[package\][^[]*version = "(.*)"'
          flags: gm
      
      - run: echo ${{ format('{0}{1}{2}', '"', steps.version_regex.outputs.match, '"') }}

      - name: GitHub Tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.0
        with: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version_regex.outputs.group1 }}
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.tag-version.outputs.new_tag }} != ${{ steps.tag-version.outputs.old_tag }}
        with:
          files: CP77-External-Radio-red4ext.zip
          prerelease: true
          draft: true
          generate_release_notes: true
          #tag_name: ${{ steps.tag-version.outputs.new_tag }}
